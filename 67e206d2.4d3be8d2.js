(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{114:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),l=(n(0),n(138)),c={id:"ThreadPoolExecutor",title:"ThreadPoolExecutor",author:"Endilie Yacop Sucipto",author_title:"Maintainer of Docusaurus",author_url:"https://github.com/web1992",author_image_url:"https://avatars3.githubusercontent.com/u/6828647?s=60&v=4",tags:["java"]},o={permalink:"/blog/ThreadPoolExecutor",editUrl:"https://github.com/web1992/blog/tree/master/blog/thread-pool-executor.md",source:"@site/blog/thread-pool-executor.md",description:"ThreadPoolExecutor",date:"2020-07-22T14:16:34.606Z",tags:[{label:"java",permalink:"/blog/tags/java"}],title:"ThreadPoolExecutor",readingTime:10.005,truncated:!0,prevItem:{title:"ThreadPoolExecutor \u4e4b\u6784\u9020\u53c2\u6570",permalink:"/blog/thread-pool-executor-constructor"},nextItem:{title:"Welcome",permalink:"/blog/welcome"}},i=[{value:"ThreadPoolExecutor",id:"threadpoolexecutor",children:[]},{value:"ExecutorService \u7c7b\u56fe",id:"executorservice-\u7c7b\u56fe",children:[]},{value:"\u8bbe\u8ba1\u76ee\u7684",id:"\u8bbe\u8ba1\u76ee\u7684",children:[]},{value:"\u6784\u9020\u53c2\u6570",id:"\u6784\u9020\u53c2\u6570",children:[{value:"Core and maximum pool sizes",id:"core-and-maximum-pool-sizes",children:[]},{value:"On-demand construction",id:"on-demand-construction",children:[]},{value:"Creating new threads",id:"creating-new-threads",children:[]},{value:"Keep-alive times",id:"keep-alive-times",children:[]},{value:"Queuing",id:"queuing",children:[]},{value:"Rejected tasks",id:"rejected-tasks",children:[]},{value:"Rejected demo",id:"rejected-demo",children:[]}]},{value:"Hook methods",id:"hook-methods",children:[]},{value:"Queue maintenance",id:"queue-maintenance",children:[]},{value:"Finalization",id:"finalization",children:[]},{value:"runState and workCount",id:"runstate-and-workcount",children:[]},{value:"runState",id:"runstate",children:[]},{value:"Method List",id:"method-list",children:[{value:"execute",id:"execute",children:[]},{value:"runWorker",id:"runworker",children:[]},{value:"getTask",id:"gettask",children:[]}]},{value:"Worker",id:"worker",children:[]},{value:"Executors",id:"executors",children:[{value:"newFixedThreadPool",id:"newfixedthreadpool",children:[]},{value:"newSingleThreadExecutor",id:"newsinglethreadexecutor",children:[]},{value:"newCachedThreadPool",id:"newcachedthreadpool",children:[]}]},{value:"\u53c2\u8003",id:"\u53c2\u8003",children:[]}],b={rightToc:i};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"threadpoolexecutor"},"ThreadPoolExecutor"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\u76ee\u5f55")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#threadpoolexecutor"}),"ThreadPoolExecutor")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#executorservice-%E7%B1%BB%E5%9B%BE"}),"ExecutorService \u7c7b\u56fe")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#%E8%AE%BE%E8%AE%A1%E7%9B%AE%E7%9A%84"}),"\u8bbe\u8ba1\u76ee\u7684")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#%E6%9E%84%E9%80%A0%E5%8F%82%E6%95%B0"}),"\u6784\u9020\u53c2\u6570"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#core-and-maximum-pool-sizes"}),"Core and maximum pool sizes")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#on-demand-construction"}),"On-demand construction")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#creating-new-threads"}),"Creating new threads")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#keep-alive-times"}),"Keep-alive times")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#queuing"}),"Queuing"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#synchronousqueue"}),"SynchronousQueue")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#linkedblockingqueue"}),"LinkedBlockingQueue")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#arrayblockingqueue"}),"ArrayBlockingQueue")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#rejected-tasks"}),"Rejected tasks")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#rejected-demo"}),"Rejected demo")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#hook-methods"}),"Hook methods")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#queue-maintenance"}),"Queue maintenance")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#finalization"}),"Finalization")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#runstate-and-workcount"}),"runState and workCount")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#runstate"}),"runState")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#method-list"}),"Method List"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#execute"}),"execute")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#runworker"}),"runWorker")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#gettask"}),"getTask")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#worker"}),"Worker")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#executors"}),"Executors"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#newfixedthreadpool"}),"newFixedThreadPool")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#newsinglethreadexecutor"}),"newSingleThreadExecutor")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#newcachedthreadpool"}),"newCachedThreadPool")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#%E5%8F%82%E8%80%83"}),"\u53c2\u8003"))),Object(l.b)("h2",{id:"executorservice-\u7c7b\u56fe"},"ExecutorService \u7c7b\u56fe"),Object(l.b)("p",null,Object(l.b)("img",Object(a.a)({parentName:"p"},{src:"./images/ThreadPoolExecutor.png",alt:"ThreadPoolExecutor"}))),Object(l.b)("h2",{id:"\u8bbe\u8ba1\u76ee\u7684"},"\u8bbe\u8ba1\u76ee\u7684"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"\u907f\u514d\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b"),Object(l.b)("li",{parentName:"ul"},"(\u5468\u671f\u6027\u7684)\u6267\u884c\u5f02\u6b65\u4efb\u52a1(\u4e3b\u8981)"),Object(l.b)("li",{parentName:"ul"},"\u7ef4\u62a4\u7ebf\u7a0b\u8d44\u6e90"),Object(l.b)("li",{parentName:"ul"},"\u7edf\u8ba1\u4fe1\u606f")),Object(l.b)("p",null,"\u5468\u671f\u6027\u7684\u6267\u884c\u4efb\u52a1\uff0c\u53ef\u53c2\u8003\u8fd9\u4e2a ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"scheduled-thread-pool-executor.md"}),"/blog/ScheduledThreadPoolExecutor")),Object(l.b)("h2",{id:"\u6784\u9020\u53c2\u6570"},"\u6784\u9020\u53c2\u6570"),Object(l.b)("h3",{id:"core-and-maximum-pool-sizes"},"Core and maximum pool sizes"),Object(l.b)("p",null,"\u7ebf\u7a0b\u6c60\u5927\u5c0f\u7b56\u7565"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"\u7ebf\u7a0b\u6570"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"\u7b56\u7565"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u5f53\u524d\u7ebf\u7a0b\u6570 < ",Object(l.b)("inlineCode",{parentName:"td"},"corePoolSize")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"corePoolSize")," < \u5f53\u524d\u7ebf\u7a0b\u6570 < ",Object(l.b)("inlineCode",{parentName:"td"},"maximumPoolSize")," & queue.isFll"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"corePoolSize")," = ",Object(l.b)("inlineCode",{parentName:"td"},"maximumPoolSize")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\u7ebf\u7a0b\u56fa\u5b9a\u5927\u5c0f")))),Object(l.b)("h3",{id:"on-demand-construction"},"On-demand construction"),Object(l.b)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u5f53\u4efb\u52a1\u63d0\u4ea4\u5230\u4e86\uff0c\u624d\u4f1a\u521b\u5efa\u7ebf\u7a0b\uff0c\u5f53\u7136\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u89c4\u5219\u3002"),Object(l.b)("h3",{id:"creating-new-threads"},"Creating new threads"),Object(l.b)("p",null,"thread \u6784\u9020\u7b56\u7565,\u4f7f\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"ThreadFactory")," \u6765\u6307\u5b9a\u7ebf\u7a0b\u7684 Group,\u540d\u79f0\uff0c\u4f18\u5148\u7ea7\u7b49\u5176\u4ed6\u8bbe\u7f6e"),Object(l.b)("h3",{id:"keep-alive-times"},"Keep-alive times"),Object(l.b)("p",null,"\u7ebf\u7a0b\u5b58\u6d3b\u7b56\u7565,\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u5728 ",Object(l.b)("inlineCode",{parentName:"p"},"Keep-alive times")," \u5185\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u5219\u88ab\u4f1a\u88ab\u9500\u6bc1"),Object(l.b)("h3",{id:"queuing"},"Queuing"),Object(l.b)("p",null,"\u961f\u5217\u7b56\u7565"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"case"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"action"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"pool size < corePoolSize"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"adding a new thread \u521b\u5efa\u65b0\u7684\u7ebf\u7a0b")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"pool size >= corePoolSize"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"queuing a request \u8fdb\u5165\u961f\u5217")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"queue is full"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"If a request cannot be queued, a new thread is created unless this would exceed maximumPoolSize, in which case, the task will be rejected. There are three general strategies for queuing")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"strategies for queuing")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"strategy"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"queue"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Direct handoffs"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"SynchronousQueue")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Unbounded queues"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"LinkedBlockingQueue")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Bounded queues"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ArrayBlockingQueue")))),Object(l.b)("h4",{id:"synchronousqueue"},"SynchronousQueue"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Direct handoffs"),". A good default choice for a work queue is a ",Object(l.b)("inlineCode",{parentName:"p"},"SynchronousQueue")," that hands off tasks to threads without otherwise holding them. Here, an attempt to queue a task will fail if no threads are immediately available to run it, so a new thread will be constructed. This policy avoids lockups when handling sets of requests that might have internal dependencies. Direct handoffs generally require unbounded ",Object(l.b)("inlineCode",{parentName:"p"},"maximumPoolSizes")," to avoid rejection of new submitted tasks. This in turn admits the possibility of unbounded thread growth when commands continue to arrive on average faster than they can be processed."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"SynchronousQueue"),"\u540c\u6b65\u7684\u961f\u5217"),Object(l.b)("h4",{id:"linkedblockingqueue"},"LinkedBlockingQueue"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Unbounded queues"),". Using an unbounded queue (for example a ",Object(l.b)("inlineCode",{parentName:"p"},"LinkedBlockingQueue")," without a predefined capacity) will cause new tasks to wait in the queue when all corePoolSize threads are busy. Thus, no more than corePoolSize threads will ever be created. (And the value of the ",Object(l.b)("inlineCode",{parentName:"p"},"maximumPoolSize")," therefore doesn't have any effect.) This may be appropriate when each task is completely independent of others, so tasks cannot affect each others execution; for example, in a web page server. While this style of queuing can be useful in smoothing out transient bursts of requests, it admits the possibility of unbounded work queue growth when commands continue to arrive on average faster than they can be processed."),Object(l.b)("p",null,"\u65e0\u8fb9\u754c\u7684\u961f\u5217\uff0c\u540c\u65f6\u4e5f\u662f\u6709\u5e8f\u7684\u961f\u5217\uff0c\uff08\u9002\u5e94\u4efb\u52a1\u4e4b\u95f4\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u573a\u666f\uff09\u4f46\u662f\u5982\u679c\u6d88\u8d39\u7684\u901f\u5ea6\u5c0f\u4e8e\u751f\u6210\u7684\u901f\u5ea6\uff0c\u4f1a\u5bfc\u81f4\u961f\u5217\u65e0\u9650\u589e\u52a0\uff08\u6700\u7ec8\u53ef\u5bfc\u81f4\u670d\u52a1\u4e0d\u53ef\u7528\uff09"),Object(l.b)("h4",{id:"arrayblockingqueue"},"ArrayBlockingQueue"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Bounded queues"),". A bounded queue (for example, an ",Object(l.b)("inlineCode",{parentName:"p"},"ArrayBlockingQueue"),") helps prevent resource exhaustion when used with finite ",Object(l.b)("inlineCode",{parentName:"p"},"maximumPoolSizes"),", but can be more difficult to tune and control. Queue sizes and maximum pool sizes may be traded off for each other: Using large queues and small pools minimizes CPU usage, OS resources, and context-switching overhead, but can lead to artificially low throughput. If tasks frequently block (for example if they are I/O bound), a system may be able to schedule time for more threads than you otherwise allow. Use of small queues generally requires larger pool sizes, which keeps CPUs busier but may encounter unacceptable scheduling overhead, which also decreases throughput."),Object(l.b)("p",null,"\u6709\u8fb9\u754c\u7684\u961f\u5217\uff0c\u961f\u5217\u7684\u5927\u5c0f\u548c\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u5982\u679c\u4f7f\u7528",Object(l.b)("inlineCode",{parentName:"p"},"\u5927\u961f\u5217"),"&",Object(l.b)("inlineCode",{parentName:"p"},"\u5c0f\u7ebf\u7a0b\u6c60"),"\u7ec4\u5408\uff0c\u53ef\u4ee5\u51cf\u5c11 CPU,OS \u8d44\u6e90\u7684\u4f7f\u7528\uff0c\u7ebf\u7a0b\u5207\u6362\uff0c\u4f46\u662f\u4e5f\u53ef\u80fd\u5bfc\u81f4\u4f4e\u7684\u541e\u5410\u91cf\uff0c\u5982\uff1a\u4efb\u52a1\u7ecf\u5e38\u963b\u585e(CPU \u4e00\u76f4\u5728\u7761\u89c9\uff0cCPU \u5f97\u4e0d\u5230\u5145\u5206\u7684\u5229\u7528)\u3002\n\u5982\u679c\u4f7f\u7528",Object(l.b)("inlineCode",{parentName:"p"},"\u5c0f\u961f\u5217"),"&",Object(l.b)("inlineCode",{parentName:"p"},"\u5927\u7ebf\u7a0b\u6c60"),"\u7ec4\u5408\uff0c\u90a3\u4e48 CPU \u4f1a\u9891\u7e41\u7684\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362(CPU \u90fd\u5728\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u4e86\uff0c\u6ca1\u65f6\u95f4\u505a\u5176\u4ed6\u4e8b\u60c5\u4e86)\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u541e\u5410\u91cf\u7684\u4e0b\u964d\u3002"),Object(l.b)("h3",{id:"rejected-tasks"},"Rejected tasks"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"policy"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"action"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ThreadPoolExecutor.AbortPolicy"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the handler throws a runtime RejectedExecutionException upon rejection")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ThreadPoolExecutor.CallerRunsPolicy"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the thread that invokes execute itself runs the task")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ThreadPoolExecutor.DiscardPolicy"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"a task that cannot be executed is simply dropped")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ThreadPoolExecutor.DiscardOldestPolicy"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the task at the head of the work queue is dropped")))),Object(l.b)("p",null,"\u5f02\u5e38\u7b56\u7565\uff0c\u5f53 Queuing \u6709\u8fb9\u754c\u65f6(\u5982\u679c queue \u662f\u6ca1\u6709\u8fb9\u754c\u7684\u5219\u4e0d\u4f1a\u89e6\u53d1)\uff0c\u8d85\u8fc7 queue \u5927\u5c0f\u7684\u4efb\u52a1\uff0c\u5982\u4f55\u5904\u7406"),Object(l.b)("h3",{id:"rejected-demo"},"Rejected demo"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'public static void main(String[] args) throws InterruptedException {\n        RejectedExecutionHandler reh = (Runnable r, ThreadPoolExecutor executor) -> {\n            System.err.println("the task " + r.toString() + " is rejected ... poll status " + executor.toString());\n        };\n        // new LinkedBlockingDeque<>(2) // \u6709\u8fb9\u754c\u7684queue\n        ThreadPoolExecutor tpe = new ThreadPoolExecutor(5, 5, 1, TimeUnit.SECONDS, new LinkedBlockingDeque<>(2), reh);\n        System.out.println(tpe.toString());\n        IntStream.range(0, 10).forEach(\n                index -> {\n                    tpe.execute(() -> {\n                        try {\n                            TimeUnit.SECONDS.sleep(1L);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        System.out.println("run = " + index);\n                    });\n                }\n        );\n\n        System.out.println("end");\n        System.out.println(tpe);\n        tpe.shutdown();\n    }\n')),Object(l.b)("h2",{id:"hook-methods"},"Hook methods"),Object(l.b)("p",null,"\u94a9\u5b50\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u4efb\u52a1\u6267\u884c\u4e4b\u524d\uff08\u4e4b\u540e\uff09\uff0c\u4e4b\u540e\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5982\uff1a\u7edf\u8ba1\u4fe1\u606f"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"beforeExecute"),Object(l.b)("li",{parentName:"ul"},"afterExecute"),Object(l.b)("li",{parentName:"ul"},"onShutdown"),Object(l.b)("li",{parentName:"ul"},"terminated")),Object(l.b)("h2",{id:"queue-maintenance"},"Queue maintenance"),Object(l.b)("p",null,"Method ",Object(l.b)("inlineCode",{parentName:"p"},"getQueue()")," \u4e3a\u4e86\u8c03\u8bd5\u8bbe\u8ba1,\u5176\u4ed6\u5ffd\u7528"),Object(l.b)("h2",{id:"finalization"},"Finalization"),Object(l.b)("p",null,"\u5982\u679c\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u957f\u65f6\u95f4\u7684\u4e0d\u4f7f\u7528\uff0c\u9700\u8981\u8fdb\u884c\u56de\u6536\uff0c\u5426\u5219\u5c31\u4f1a\u6d6a\u8d39\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u6216\u8005\u5fd8\u8bb0\u8c03\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"shutdown()")," \u65b9\u6cd5\u8fdb\u884c\u5173\u95ed\u65f6\uff0c\u4e5f\u4f1a\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39."),Object(l.b)("h2",{id:"runstate-and-workcount"},"runState and workCount"),Object(l.b)("p",null,Object(l.b)("img",Object(a.a)({parentName:"p"},{src:"./images/thread-pool-ctl.png",alt:"thread-pool-ctl.png"}))),Object(l.b)("h2",{id:"runstate"},"runState"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"state"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"desc"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"RUNNING"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Accept new tasks and process queued tasks")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"SHUTDOWN"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Don't accept new tasks, but process queued tasks")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"STOP"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Don't accept new tasks, don't process queued tasks,and interrupt in-progress tasks")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"TIDYING"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"All tasks have terminated, workerCount is zero,the thread transitioning to state TIDYING will run the terminated() hook method")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"TERMINATED"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"terminated() has completed")))),Object(l.b)("h2",{id:"method-list"},"Method List"),Object(l.b)("h3",{id:"execute"},"execute"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"// execute \u65b9\u6cd5\u4f1a\u6839\u636e\u5f53\u524d\u7ebf\u7a0b\u6c60\u7684\u72b6\u6001\uff0c\u5bf9\u4efb\u52a1\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\n// execute \u4e0e submit \u5bf9\u6bd4:\n// execute \u662f java.util.concurrent.Executor \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\n// submit  \u662f java.util.concurrent.ExecutorService \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\n// execute \u8fd4\u56de\u503c\u662f void\n// submit \u8fd4\u56de\u503c\u662f Future\n// submit \u6700\u7ec8\u8fd8\u662f\u628a\u4efb\u52a1\u7ed9\u4e86 execute \u8fdb\u884c\u6267\u884c\u7684\n// submit \u652f\u6301\u5f02\u6b65\u7684\u7ed3\u679c\u67e5\u8be2\npublic void execute(Runnable command) {\n    if (command == null)\n        throw new NullPointerException();\n    /*\n     * Proceed in 3 steps:\n     *\n     * 1. If fewer than corePoolSize threads are running, try to\n     * start a new thread with the given command as its first\n     * task.  The call to addWorker atomically checks runState and\n     * workerCount, and so prevents false alarms that would add\n     * threads when it shouldn't, by returning false.\n     *\n     * 2. If a task can be successfully queued, then we still need\n     * to double-check whether we should have added a thread\n     * (because existing ones died since last checking) or that\n     * the pool shut down since entry into this method. So we\n     * recheck state and if necessary roll back the enqueuing if\n     * stopped, or start a new thread if there are none.\n     *\n     * 3. If we cannot queue task, then we try to add a new\n     * thread.  If it fails, we know we are shut down or saturated\n     * and so reject the task.\n     */\n    int c = ctl.get();\n    // 1. \u5f53\u524d\u7684\u7ebf\u7a0b\u6570\uff0c\u5c0f\u4e8e\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u521b\u5efa\u7ebf\u7a0b\n    if (workerCountOf(c) < corePoolSize) {\n        if (addWorker(command, true))\n            return;\n        c = ctl.get();\n    }\n    // 2. \u5982\u679c\u7ebf\u7a0b\u6c60\u6ca1\u6709\u5173\u95ed\uff0c\u4efb\u52a1\u8fdb\u5165 queue \u6210\u529f\n    if (isRunning(c) && workQueue.offer(command)) {\n        int recheck = ctl.get();\n        // \u518d\u6b21\u68c0\u67e5\u7ebf\u7a0b\u6c60\u662f\u5426\u5173\u95ed\n        // \u5982\u679c\u5173\u95ed\u4e86\uff0c\u5220\u9664\u4efb\u52a1\uff08\u4ece queue \u4e2d\u5220\u9664\uff09\n        // \u5982\u679c\u5220\u9664\u4efb\u52a1\u6210\u529f\uff0c\u5219\u6267\u884c reject\n        // (\u7ebf\u7a0b\u6b63\u5728\u5173\u95ed&&\u4ecequeue \u4e2d\u5220\u9664\u4e86\uff0c\u90a3\u4e48\u6b64\u4efb\u52a1\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u4e86)\n        if (!isRunning(recheck) && remove(command))\n            reject(command);\n        // \u8fd9\u91cc worlerCont \u5224\u65ad\u5176\u5b9e\u4e0d\u662f\u5fc5\u8981\u7684\n        // \u8fd9\u91cc\u5c31\u662f\u5224\u65ad\u5982\u679c\u7ebf\u7a0b\u6c60\u4e2d\u6ca1\u6709\u7ebf\u7a0b(\u7ebf\u7a0b\u6c60\u6b63\u5728\u8fd0\u884c),\u5c31\u65b0\u589e\u4e00\u4e2a\u7ebf\u7a0b\n        else if (workerCountOf(recheck) == 0)\n            addWorker(null, false);\n    }\n    // 3. \u7ebf\u7a0b\u6c60\u6b63\u5728\u5173\u95ed & \u8fdb\u5165 queue \u5931\u8d25,\u5c31\u6267\u884c\u65b0\u589e\u7ebf\u7a0b\n    //   \u65b0\u589e\u7ebf\u7a0b\u5931\u8d25\uff0c\u89e6\u53d1 reject\n    //   (addWorker \u4e2d\u6709\u5bf9\u7ebf\u7a0b\u6c60\u72b6\u6001\u7684\u5224\u65ad) \u8fd9\u91cc\u6ca1\u6709\u6267\u884c\u7ebf\u7a0b\u53ea\u72b6\u6001\u7684\u68c0\u67e5\n    else if (!addWorker(command, false))\n        reject(command);\n}\n")),Object(l.b)("h3",{id:"runworker"},"runWorker"),Object(l.b)("p",null,"\u6211\u4eec\u77e5\u9053\u5982\u679c \u901a\u8fc7 ",Object(l.b)("inlineCode",{parentName:"p"},"newFixedThreadPool")," \u548c ",Object(l.b)("inlineCode",{parentName:"p"},"newSingleThreadExecutor")," \u521b\u5efa\u7684 ",Object(l.b)("inlineCode",{parentName:"p"},"ThreadPoolExecutor")," \u4e0d\u6267\u884c ",Object(l.b)("inlineCode",{parentName:"p"},"shutdown")," \u65b9\u6cd5\uff0cJVM \u5c31\u4e0d\u4f1a\u9000\u51fa\uff0c\u539f\u56e0\u5c31\u5728\u4e0e ",Object(l.b)("inlineCode",{parentName:"p"},"runWorker")," \u4e2d\u7684 \u4f1a\u533a\u8c03\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"getTask")," \u65b9\u6cd5\uff0c\u800c ",Object(l.b)("inlineCode",{parentName:"p"},"getTask")," \u65b9\u6cd5\u4f1a\u8c03\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"BlockingQueue")," \u7684 ",Object(l.b)("inlineCode",{parentName:"p"},"take")," \u65b9\u6cd5\uff0c\uff08\u8c03\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"take")," \u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u961f\u5217\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6709\u6570\u636e\u653e\u5165\u961f\u5217\uff09\uff0c\u8fd9\u5c31\u662f ",Object(l.b)("inlineCode",{parentName:"p"},"newFixedThreadPool"),"& ",Object(l.b)("inlineCode",{parentName:"p"},"newSingleThreadExecutor")," \u542f\u52a8\u7684\u7ebf\u7a0b\u6c60\uff0c\u4e0d\u4f1a\u4e3b\u52a8\u5173\u95ed\u7684\u539f\u56e0"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"newCachedThreadPool")," \u521b\u5efa\u7684\u7ebf\u7a0b\u6c60\u4f1a\uff0c\u5982\u679c\u8d85\u8fc7 60 \u79d2\u6ca1\u6709\u53ef\u6267\u884c\u7684\u4efb\u52a1\uff0c\u5c31\u4f1a\u9000\u51fa,\u539f\u56e0\u5728\u4e0e\u4f1a\u6267\u884c ",Object(l.b)("inlineCode",{parentName:"p"},"workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS)")),Object(l.b)("p",null,"\u8be5\u65b9\u6cd5\u53ea\u4f1a\u963b\u585e 60 \u79d2\uff0c\u5982\u679c\u8fc7\u4e86 60 \u79d2\uff0c\u8fd8\u6ca1\u4efb\u52a1\u53ef\u6267\u884c\uff0c\u4f1a\u66f4\u65b0 ",Object(l.b)("inlineCode",{parentName:"p"},"timedOut"),"\u53d8\u91cf\u7684\u503c\uff0c\u90a3\u4e48\u5c31\u4f1a\u7ed3\u675f ",Object(l.b)("inlineCode",{parentName:"p"},"while")," \u5faa\u73af\uff0c\u6700\u7ec8\u7ec8\u6b62\u7ebf\u7a0b"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Worker")," \u7c7b\u5b9e\u73b0\u4e86 ",Object(l.b)("inlineCode",{parentName:"p"},"Runnable")," \u63a5\u53e3\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u4ea4\u7ed9\u7ebf\u7a0b\u8fdb\u884c\u6267\u884c\uff0c\u5f53\u6267\u884c ",Object(l.b)("inlineCode",{parentName:"p"},"Thread#start")," \u65b9\u6cd5\uff0c\u7ebf\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u5c31\u6267\u884c ",Object(l.b)("inlineCode",{parentName:"p"},"run")," \u65b9\u6cd5\uff0c\u4ece\u800c\u6267\u884c ",Object(l.b)("inlineCode",{parentName:"p"},"runWorker")," \u65b9\u6cd5"),Object(l.b)("p",null,"Worker \u7684 run \u65b9\u6cd5"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public void run() {\n    runWorker(this);\n}\n")),Object(l.b)("p",null,"\u800c ",Object(l.b)("inlineCode",{parentName:"p"},"Thread#start")," \u662f\u5728 ",Object(l.b)("inlineCode",{parentName:"p"},"addWorker")," \u65b9\u6cd5\u4e2d\u6267\u884c\u7684"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"// Worker \u7ee7\u627f\u4e86 AbstractQueuedSynchronizer\uff0c\u5b9e\u73b0\u9501\u7684\u529f\u80fd\nfinal void runWorker(Worker w) {\n    Thread wt = Thread.currentThread();\n    Runnable task = w.firstTask;\n    w.firstTask = null;\n    w.unlock(); // allow interrupts\n    boolean completedAbruptly = true;\n    try {\n        // getTask \u662f\u4ece BlockingQueue \u4e2d\u83b7\u53d6\u6570\u636e\u7684\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u4f1a\u4e00\u76f4\u963b\u585e\n        // getTask \u5982\u679c\u8fd4\u56de\u4e86 null ,\u90a3\u4e48 while \u5c31\u4e0d\u518d\u6b21\u5faa\u73af\u4e86\uff0c\n        // \u5c31\u4f1a\u6267\u884c finally \u4e2d\u7684\u4ee3\u7801\n        // getTask \u4e2d\u4e5f\u4f1a\u5bf9\u53ef\u7528\u7684\u7ebf\u7a0b\u6570 -1\n        while (task != null || (task = getTask()) != null) {\n            w.lock();// \u52a0\u9501\n            // If pool is stopping, ensure thread is interrupted;\n            // if not, ensure thread is not interrupted.  This\n            // requires a recheck in second case to deal with\n            // shutdownNow race while clearing interrupt\n            if ((runStateAtLeast(ctl.get(), STOP) ||\n                 (Thread.interrupted() &&\n                  runStateAtLeast(ctl.get(), STOP))) &&\n                !wt.isInterrupted())\n                wt.interrupt();\n            try {\n                beforeExecute(wt, task);// \u94a9\u5b50\u65b9\u6cd5\n                Throwable thrown = null;\n                try {\n                    task.run();// \u6267\u884c\u4efb\u52a1\n                } catch (RuntimeException x) {\n                    thrown = x; throw x;\n                } catch (Error x) {\n                    thrown = x; throw x;\n                } catch (Throwable x) {\n                    thrown = x; throw new Error(x);\n                } finally {\n                    afterExecute(task, thrown);// \u94a9\u5b50\u65b9\u6cd5\n                }\n            } finally {\n                task = null;\n                w.completedTasks++;\n                w.unlock();// \u91ca\u653e\u9501\n            }\n        }\n        completedAbruptly = false;\n    } finally {\n        // \u8fd9\u4e2a finally \u5757\n        // \u53ea\u6709\u5728\u8c03\u7528\u4e86 getTask() \u65b9\u6cd5\u8fd4\u56de\u4e86 null \u4e4b\u540e(while \u5faa\u73af\u4f1a\u7ed3\u675f)\n        // \u624d\u4f1a\u6267\u884c\u5173\u95ed\u7ebf\u7a0b\u7684\u64cd\u4f5c\n        // \u5177\u4f53\u7684\u7ebf\u7a0b\u9000\u51fa\u64cd\u4f5c\u5728 interruptIdleWorkers \u4e2d\n        processWorkerExit(w, completedAbruptly);\n    }\n}\n// \u5173\u95ed\u7ebf\u7a0b\uff0c\u901a\u8fc7 t.interrupt(); \u8fdb\u884c\u5173\u95ed\u7ebf\u7a0b\n// onlyOne = true \u4e00\u6b21\u53ea\u5173\u95ed\u4e00\u4e2a\u7ebf\u7a0b\n// interruptIdleWorkers \u65b9\u6cd5\u7684\u903b\u8f91\u5c31\u662f\u4ece workers \u96c6\u5408\u4e2d\u67e5\u8be2\u627e\u5230\u4e00\u4e2a Worker\n// \u6267\u884c\u4e24\u4e2a\u5224\u65ad:\n// 1. \u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u6267\u884c\u4e86 interrupt \u65b9\u6cd5\n//    \u5982\u679c\u6267\u884c\u8fc7\u4e86\uff0c\u8bf4\u660e\u7ebf\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u4e86\uff0c\u627e\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\n// 2. \u5e76\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u5982\u679c\u83b7\u53d6\u9501\u6210\u529f\uff0c\u8bc1\u660e\n//    \u8fd9\u4e2a\u7ebf\u7a0b\u6ca1\u6709\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u7a7a\u95f2\u72b6\u6001)\n//    \u6267\u884c t.interrupt(); \u8fdb\u884c\u7ebf\u7a0b\u7684\u9000\u51fa\nprivate void interruptIdleWorkers(boolean onlyOne) {\nfinal ReentrantLock mainLock = this.mainLock;\nmainLock.lock();\ntry {\n    for (Worker w : workers) {\n        Thread t = w.thread;\n        if (!t.isInterrupted() && w.tryLock()) {\n            try {\n                t.interrupt();\n            } catch (SecurityException ignore) {\n            } finally {\n                w.unlock();\n            }\n        }\n        if (onlyOne)\n            break;\n    }\n} finally {\n    mainLock.unlock();\n}\n}\n")),Object(l.b)("h3",{id:"gettask"},"getTask"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"    // getTask \u8fd4\u56de\u4e86null,\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u7a0b\u5c31\u4f1a\u9000\u51fa\n    // \u6709\u4e0b\u9762\u56db\u79cd\u60c5\u51b5\n    // 1. \u7ebf\u7a0b\u6570\u8d85\u8fc7\u4e86 maximumPoolSize\uff0c\u8fd4\u56de Null\n    // 2. \u7ebf\u7a0b\u6c60 stopped\n    // 3. \u7ebf\u7a0b\u6c60 shutdown & \u961f\u5217\u4e3a\u7a7a\n    // 4. \u7ebf\u7a0b\u5728\u6267\u884c\u7684\u65f6\u95f4\u5185\uff0c\u6ca1\u6709\u53ef\u6267\u884c\u4efb\u52a1\uff0c\u5e76\u4e14\u8d85\u8fc7\u4e86 corePoolSize\n    //    \u90a3\u4e48\u5c31\u4f1a\u9000\u51fa\uff08\u5982\uff1akeepAliveTime=10\uff0c\u8bf4\u660e\u6b64\u7ebf\u7a0b\u5df2\u7ecf\u963b\u585e\u4e8610 \u7eb3\u79d2\uff0c\u4f9d\u7136\u6ca1\u6709\u53ef\u4ee5\u6267\u884c\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u7ebf\u7a0b\u5c31\u9000\u51fa\uff09\n    private Runnable getTask() {\n        boolean timedOut = false; // Did the last poll() time out?\n\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);\n\n            // Check if queue empty only if necessary.\n            // \u5982\u679c\u7ebf\u7a0b\u6c60\u6b63\u5728\u5173\u95ed\uff0c\u6216\u8005\u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\uff0c\u5c31\u8fd4\u56de\u7a7a\n            // \u540c\u65f6\u628a\u53ef\u7528\u7684\u7ebf\u7a0b\u6570 -1\n            if (rs >= SHUTDOWN && (rs >= STOP || workQueue.isEmpty())) {\n                decrementWorkerCount();\n                return null;\n            }\n\n            int wc = workerCountOf(c);\n\n            // Are workers subject to culling?\n            boolean timed = allowCoreThreadTimeOut || wc > corePoolSize;\n\n            // \u5982\u679c\u5de5\u4f5c\u7ebf\u7a0b\u8d85\u8fc7\u4e86\u914d\u7f6e\u7684\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u6216\u8005 \u5141\u8bb8\u8d85\u65f6&\u4e0a\u4e00\u6b21\u4efb\u52a1\u8d85\u65f6\u4e86\n            // \u5e76\u4e14\uff08\u5de5\u4f5c\u7684\u7ebf\u7a0b\u5927\u4e8e1 \u6216\u8005\u961f\u5217\u4e3a\u7a7a\uff09\n            // \u5c31\u5c1d\u8bd5\u8fdb\u884c\u7ebf\u7a0b\u7684\u56de\u6536(\u51cf\u5c11)\n            // \u5c1d\u8bd5\u6210\u529f\uff0c\u5c31\u8fd4\u56de null,\u540e\u7eed\u4f1a\u6267\u884c processWorkerExit \u65b9\u6cd5\n            // \u628a \u7ebf\u7a0b\u4ece workers \u96c6\u5408\u4e2d\u5220\u9664\n            if ((wc > maximumPoolSize || (timed && timedOut))\n                && (wc > 1 || workQueue.isEmpty())) {\n                if (compareAndDecrementWorkerCount(c))\n                    return null;\n                continue;\n            }\n\n            try {\n                // \u5982\u679c\u5141\u8bb8\u7ebf\u7a0b\u8d85\u65f6\uff0c\u4f7f\u7528 poll \u83b7\u53d6\u4efb\u52a1\n                // \u5426\u5219\u4f7f\u7528 take \u4e00\u76f4\u963b\u585e\u5230\u6709\u4efb\u52a1\u8fdb\u5165\u961f\u5217\n                Runnable r = timed ?\n                    workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :\n                    workQueue.take();\n                if (r != null)\n                    return r;\n                timedOut = true;// \u5982\u679c r=null,\u5c31\u662f\u5728\u5236\u5b9a\u65f6\u95f4\u5185\uff0c\u6ca1\u6709\u53ef\u6267\u884c\u7684\u4efb\u52a1\uff0c\u5c31\u8bbe\u7f6e\u8d85\u65f6\u6807\u8bb0\u4e3a true\n            } catch (InterruptedException retry) {\n                timedOut = false;\n            }\n        }\n    }\n")),Object(l.b)("h2",{id:"worker"},"Worker"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"   // Worker \u7c7b\u662f ThreadPoolExecutor \u7684\u5185\u90e8\u7c7b\n   // Worker \u7ee7\u627f\u4e86 aqs \u7c7b\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0d\u53ef\u91cd\u5165\u7684\u9501\u529f\u80fd\n   // Worker \u5b9e\u73b0\u9501\u529f\u80fd\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u65b9\u4fbf\u7ec8\u6b62\u7ebf\u7a0b(\u53ef\u53c2\u8003 interruptIdleWorkers \u65b9\u6cd5)\n   // \u7ebf\u7a0b\u5728\u6267\u884c\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u52a0\u9501\uff0c\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u91ca\u653e\u9501\n   // \u5728\u7ec8\u6b62\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528 tryLock \u53bb\u83b7\u53d6\u9501\uff0c\u5982\u679c\u83b7\u53d6\u9501\u6210\u529f\n   // \u8bf4\u660e\u6b64\u7ebf\u7a0b\u6ca1\u6709\u5728\u6267\u884c\u4efb\u52a1\uff0c\u5c31\u4f7f\u7528 Thread#interrupt \u65b9\u6cd5\u7ec8\u6b62\u7ebf\u7a0b\uff0c\u8fdb\u884c\u7ebf\u7a0b\u7684\u56de\u6536\n   // Worker \u5b9e\u73b0\u4e86 Runnable \u5b9e\u73b0\u4e86 run \u65b9\u6cd5\n   // Worker \u4e2d\u7ef4\u62a4\u4e00\u4e2a Thread\n   private final class Worker\n        extends AbstractQueuedSynchronizer\n        implements Runnable\n    {\n        Worker(Runnable firstTask) {\n            setState(-1); // inhibit interrupts until runWorker\n            this.firstTask = firstTask;\n            // \u8fd9\u91cc\u5728\u521b\u5efa Thread \u7684\u65f6\u5019\u628a Worker(Runnable) \u7ed9Thread\n            // \u5f53\u5728\u6267\u884c Thread#start \u7684\u4e4b\u540e\uff0c\u7ebf\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u6267\u884c\u4e0b\u9762\u7684 run \u65b9\u6cd5\n            this.thread = getThreadFactory().newThread(this);\n        }\n        // \u5728\u7ebf\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u6267\u884c Worker \u7684 run \u65b9\u6cd5\n        public void run() {\n            runWorker(this);\n        }\n    }\n")),Object(l.b)("h2",{id:"executors"},"Executors"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Executors")," \u4e2d\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\u7684\u8bf4\u660e\uff0c\u5982\u679c\u7406\u89e3\u8fd9\u4e9b\u65b9\u6cd5\u7684",Object(l.b)("inlineCode",{parentName:"p"},"\u4f5c\u7528"),"\u548c",Object(l.b)("inlineCode",{parentName:"p"},"\u4e0d\u540c\u70b9"),"\uff0c\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u4e2d\u7684\u5751"),Object(l.b)("p",null,"\u5982 ",Object(l.b)("inlineCode",{parentName:"p"},"newFixedThreadPool")," \u548c ",Object(l.b)("inlineCode",{parentName:"p"},"newSingleThreadExecutor"),"\u90fd\u4f7f\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"LinkedBlockingQueue")," \u6765\u5b58\u50a8\u591a\u4f59\u7684\u4efb\u52a1"),Object(l.b)("p",null,"\u5982\u679c\u7ebf\u7a0b\u5904\u7406\u7684\u901f\u5ea6\u5c0f\u4e8e\u4efb\u52a1\u521b\u5efa\u7684\u901f\u5ea6\uff0c\u90a3\u4e48\u65e0\u6cd5\u5904\u7406\u7684\u4efb\u52a1\u90fd\u4f1a\u653e\u5165 ",Object(l.b)("inlineCode",{parentName:"p"},"Queue")," \u4e2d,\u968f\u7740\u961f\u5217\u7684\u65e0\u9650\u589e\u5927\u4f1a\u5bfc\u81f4\u5185\u5b58\u8d44\u6e90\u8017\u5c3d"),Object(l.b)("p",null,"\u4e0b\u9762 ",Object(l.b)("inlineCode",{parentName:"p"},"Executors")," \u63d0\u4f9b\u7684\u51e0\u4e2a\u65b9\u6cd5\uff0c\u5e95\u5c42\u7684 Queue \u90fd\u662f\u6ca1\u6709\u8fb9\u754c\u7684\uff0c\u4f7f\u7528\u65f6\u5019\u8bf7\u6ce8\u610f\u5185\u5b58\u6cc4\u9732"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"ThreadPoolExecutor")," \u4f7f\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"BlockingQueue")," \u6765\u5b58\u50a8\u591a\u4f59\u7684\u4efb\u52a1\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528",Object(l.b)("inlineCode",{parentName:"p"},"ArrayList"),",",Object(l.b)("inlineCode",{parentName:"p"},"LinkedList"),"\u5462\uff1f"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},Object(l.b)("inlineCode",{parentName:"p"},"ArrayList"),",",Object(l.b)("inlineCode",{parentName:"p"},"LinkedList")," \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\uff0c\u5982\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u6765\u5b58\u50a8\u4efb\u52a1\uff0c\u4f1a\u589e\u52a0 API \u7684\u8bbe\u8ba1\u96be\u5ea6\uff0c\u800c ",Object(l.b)("inlineCode",{parentName:"p"},"BlockingQueue")," \u5929\u751f\u4e3a\u591a\u7ebf\u7a0b\u800c\u751f")),Object(l.b)("h3",{id:"newfixedthreadpool"},"newFixedThreadPool"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"\u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public static ExecutorService newFixedThreadPool(int nThreads) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>());\n}\n")),Object(l.b)("h3",{id:"newsinglethreadexecutor"},"newSingleThreadExecutor"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"\u521b\u5efa\u4e00\u4e2a\u53ea\u5305\u542b\u4e00\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public static ExecutorService newSingleThreadExecutor() {\n        return new FinalizableDelegatedExecutorService\n            (new ThreadPoolExecutor(1, 1,\n                                    0L, TimeUnit.MILLISECONDS,\n                                    new LinkedBlockingQueue<Runnable>()));\n}\n")),Object(l.b)("h3",{id:"newcachedthreadpool"},"newCachedThreadPool"),Object(l.b)("p",null,"\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u4f7f\u7528\u7684\u7ebf\u7a0b\uff0c\u5c31\u521b\u5efa\u65b0\u7684\uff0c\u5982\u679c\u6709\u5219\u590d\u7528\u4e4b\u524d\u7684\u7ebf\u7a0b\n\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u5728 60 \u79d2\u5185\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u5219\u88ab\u4ece cache \u4e2d\u5220\u9664&\u7ebf\u7a0b\u4f1a\u88ab\u7ec8\u6b62"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n}\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"newCachedThreadPool")," \u521b\u5efa\u7684\u7ebf\u7a0b\u4f1a\u5728 60 \u79d2\u4e4b\u540e\uff0c\u8fdb\u884c\u7ec8\u6b62\uff0c\u662f\u56e0\u4e3a\u5728\u6784\u9020 ",Object(l.b)("inlineCode",{parentName:"p"},"ThreadPoolExecutor")," \u65f6\n",Object(l.b)("inlineCode",{parentName:"p"},"corePoolSize = 0")," & ",Object(l.b)("inlineCode",{parentName:"p"},"keepAliveTime=60")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"// \u8fd9\u91cc\u901a\u8fc7\u4ee3\u7801\u5206\u6790\u4e0b\u5b9e\u73b0\u539f\u7406\n// newCachedThreadPool \u5728\u6784\u9020\u7ebf\u7a0b\u6c60\u7684\u65f6\u5019\uff0c\u4e0b\u9762\u7684\u4ee3\u7801 corePoolSize =0\n// wc \u4e3a\u7ebf\u7a0b\u6570\uff0c\u53ea\u8981\u6709\u7ebf\u7a0b\u5b58\u5728\uff0c\u90a3\u4e48 timed \u5c31\u4e3a true\n// keepAliveTime =60 \u79d2\uff0c\n// timed=ture \u56e0\u6b64\u4f1a\u6267\u884c poll \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u4efb\u52a1\uff0c\u5982\u679c\u8d85\u8fc7\u4e8660\u79d2\uff0c\u6ca1\u53ef\u6267\u884c\u7684\u4efb\u52a1\uff0c\n// \u90a3\u4e48\u5c31\u8fd4\u56de null,\u540c\u65f6\u56e0\u4e3a poll \u7684\u963b\u585e\uff0c\u8be5\u7ebf\u7a0b\u4e5f\u7b49\u5f85\u4e8660 \u79d2\uff08\u5176\u5b9e\u5c31\u662f\u7ebf\u7a0b\u8fd960\u79d2\u53ea\u987e\u7761\u89c9\u4e86\uff0c\u4ec0\u4e48\u90fd\u6ca1\u505a\uff09\n// \u8fd4\u56de null \u4e4b\u540e\uff0c\u5728\u540e\u7eed\u7684\u903b\u8f91\u4e2d\uff0c\u4f1a\u8fdb\u7ebf\u7a0b\u7684\u7ec8\u6b62 \u5177\u4f53\u4ee3\u7801\u5728 processWorkerExit \u65b9\u6cd5\u4e2d\n\nboolean timed = allowCoreThreadTimeOut || wc > corePoolSize;\n\nRunnable r = timed ?\n                    workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :\n                    workQueue.take();\n                if (r != null)\n                    return r;\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"newCachedThreadPool")," \u521b\u5efa\u7684\u7ebf\u7a0b\u6c60\u4f1a\u5728\u7ebf\u7a0b\u95f2\u7f6e 60 \u4e4b\u540e\u9500\u6bc1\u6240\u6709\u7684\u7ebf\u7a0b(corePoolSize=0)\uff0c\u4ece\u800c\u9000\u51fa(\u4e0d\u9700\u8981\u624b\u52a8\u7684\u8c03\u7528 shutdown \u65b9\u6cd5)\n\u800c ",Object(l.b)("inlineCode",{parentName:"p"},"newFixedThreadPool")," & ",Object(l.b)("inlineCode",{parentName:"p"},"newSingleThreadExecutor")," \u521b\u5efa\u7684\u7ebf\u7a0b\u6c60(corePoolSize!=0)\uff0c\u7531\u4e8e\u59cb\u7ec8\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7ebf\u7a0b\n\u800c\u8fd9\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7ebf\u7a0b\u56e0\u4e3a\u8c03\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"workQueue.take()")," \u4f1a\u963b\u585e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u9000\u51fa(\u9700\u8981\u624b\u52a8\u7684\u8c03\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"shutdown")," \u65b9\u6cd5)"),Object(l.b)("p",null,"\u53ef\u4ee5\u770b\u5230 \u4e0a\u9762\u7684\u4e8c\u4e2a\u65b9\u6cd5\u90fd\u4f7f\u7528",Object(l.b)("inlineCode",{parentName:"p"},"LinkedBlockingQueue"),"\u4f5c\u7528 ",Object(l.b)("inlineCode",{parentName:"p"},"queue"),",\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528",Object(l.b)("inlineCode",{parentName:"p"},"ArrayBlockingQueue"),"\u5462\uff1f"),Object(l.b)("p",null,"\u4f7f\u7528\u4e24\u4e2a\u9501\u6765\u63a7\u5236\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u8fd9\u6837\u961f\u5217\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c ",Object(l.b)("inlineCode",{parentName:"p"},"put")," \u548c ",Object(l.b)("inlineCode",{parentName:"p"},"take")," \u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u541e\u5410\u91cf\u76f8\u5bf9 ",Object(l.b)("inlineCode",{parentName:"p"},"ArrayBlockingQueue")," \u5c31\u9ad8"),Object(l.b)("p",null,"\u53ef\u53c2\u8003 ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"queue.md#LinkedBlockingQueue"}),"queue")),Object(l.b)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/web1992/read/blob/master/java/list.md"}),"ArrayList vs LinkedList")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html"}),"from oracle")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"./draw.io/ThreadPoolExecutor.xml"}),"draw.io file"))))}u.isMDXComponent=!0},138:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),u=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),d=u(n),s=a,m=d["".concat(c,".").concat(s)]||d[s]||p[s]||l;return n?r.a.createElement(m,o(o({ref:t},b),{},{components:n})):r.a.createElement(m,o({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=s;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var b=2;b<l;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);